# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserOutput {
  id: ID!
  email: String!
  name: String!
  role: String!
  phone: String
  address: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type NutritionalInfoOutput {
  calories: Float
  protein: Float
  carbs: Float
  fat: Float
}

type MenuItemOutput {
  id: ID!
  name: String!
  description: String
  price: Float!
  category: String!
  imageUrl: String
  ingredients: [String!]
  nutritionalInfo: NutritionalInfoOutput
  isVegetarian: Boolean!
  isVegan: Boolean!
  isGlutenFree: Boolean!
  isAvailable: Boolean!
  preparationTime: Float
  createdAt: DateTime!
  updatedAt: DateTime!
}

type OrderItemOutput {
  name: String!
  price: Float!
  quantity: Int!
  subTotal: Float!
}

type DeliveryAddressOutput {
  street: String!
  city: String!
  state: String!
  zipCode: String!
}

type OrderOutput {
  orderId: ID!
  userId: ID!
  assignedTo: ID
  items: [OrderItemOutput!]!
  totalAmount: Float!
  deliveryAddress: DeliveryAddressOutput!
  status: String!
  createdAt: DateTime
}

type OrderStatisticsOutput {
  total: Int!
  placed: Int!
  confirmed: Int!
  preparing: Int!
  ready: Int!
  out_for_delivery: Int!
  delivered: Int!
  cancelled: Int!
}

type PaymentOrderOutput {
  orderId: String
  paymentSessionId: String
}

type Restaurant {
  name: String!
  image: String
  city: String!
  state: String!
  address: String!
  phone: String!
  email: String!
}

type Query {
  sayHello: String!
  me: UserOutput!
  userByEmail(email: String!): UserOutput!
  userById(id: ID!): UserOutput!
  allMenuItems: [MenuItemOutput!]!
  menuItems: [MenuItemOutput!]!
  menuItemsByCategory(category: String!): [MenuItemOutput!]!
  menuItem(id: ID!): MenuItemOutput!
  searchMenuItems(query: String!): [MenuItemOutput!]!
  userOrders: [OrderOutput!]!
  myDeliveries: [OrderOutput!]!
  allOrders(status: String): [OrderOutput!]!
  ordersByStatus(status: String!): [OrderOutput!]!
  orderStats: OrderStatisticsOutput!
  paymentStatus(orderId: String!): String!
  myRestaurant: Restaurant!
}

type Mutation {
  updateMyProfile(input: UpdateProfileInput!): UserOutput!
  addMenuItem(input: CreateMenuItemInput!): MenuItemOutput!
  updateMenuItem(input: UpdateMenuItemInput!): MenuItemOutput!
  deleteMenuItem(id: ID!): MenuItemOutput!
  createOrder(input: CreateOrderInput!): OrderOutput!
  confirmOrder(orderId: ID!): OrderOutput!
  markPreparing(orderId: ID!): OrderOutput!
  markReady(orderId: ID!): OrderOutput!
  startDelivery(orderId: ID!): OrderOutput!
  markDelivered(orderId: ID!): OrderOutput!
  cancelOrder(orderId: ID!): OrderOutput!
  assignOrder(orderId: ID!, deliveryUserId: ID!): OrderOutput!
  createPaymentOrder(input: CreatePaymentOrderInput!): PaymentOrderOutput!
  createPaymentForOrder(input: CreatePaymentForOrderInput!): PaymentOrderOutput!
  confirmPayment(orderId: String!): OrderOutput!
  refundPayment(orderId: String!): OrderOutput!
}

input UpdateProfileInput {
  name: String
  phone: String
  address: String
}

input CreateMenuItemInput {
  name: String!
  description: String
  price: Float!
  category: String!
  imageUrl: String
  ingredients: [String!]
  nutritionalInfo: NutritionalInfoInput
  isVegetarian: Boolean
  isVegan: Boolean
  isGlutenFree: Boolean
  isAvailable: Boolean
  preparationTime: Float
}

input NutritionalInfoInput {
  calories: Float
  protein: Float
  carbs: Float
  fat: Float
}

input UpdateMenuItemInput {
  name: String
  description: String
  price: Float
  category: String
  imageUrl: String
  ingredients: [String!]
  nutritionalInfo: NutritionalInfoInput
  isVegetarian: Boolean
  isVegan: Boolean
  isGlutenFree: Boolean
  isAvailable: Boolean
  preparationTime: Float
  id: ID!
}

input CreateOrderInput {
  items: [OrderItemInput!]!
  deliveryAddress: DeliveryAddressInput!
  notes: String
}

input OrderItemInput {
  menuItemId: ID!
  quantity: Int!
  specialInstructions: String
}

input DeliveryAddressInput {
  street: String!
  city: String!
  state: String!
  zipCode: String!
}

input CreatePaymentOrderInput {
  orderAmount: Float!
  orderCurrency: String = "INR"
  customerId: String!
  customerPhone: String!
}

input CreatePaymentForOrderInput {
  orderId: ID!
  customerPhone: String!
}